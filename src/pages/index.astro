---
import { getCollection } from "astro:content";
import Layout from "@layouts/Main.astro";
import WhyAndHow from "@components/WhyAndHow.svelte";
import IndexDescription from "@components/IndexDescription.svelte";
import ListHook from "@components/ListHook.svelte";

const hooks = (await getCollection("svelte")).sort(
	(a, b) => b.data.date.getTime() - a.data.date.getTime(),
);

const framework =
	Astro.cookies.get("framework")?.value !== "SVELTE" ? "REACT" : "SVELTE";
---

<Layout title="Sheera">
	<header class="flex flex-col gap-3">
		<h1 class="font-bold text-4xl text-center">SHEERA</h1>
		<IndexDescription client:load />
		<div
			class="flex flex-row justify-center items-center gap-4 font-semibold text-sm text-center"
		>
			<a
				class="inline-flex flex-row items-center gap-1"
				href="//github.com/anasrar/sheera/blob/main/LICENSE"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					viewBox="0 0 16 16"
					fill="currentColor"
					class="w-4 h-4"
				>
					<path
						fill-rule="evenodd"
						d="M4 2a1.5 1.5 0 0 0-1.5 1.5v9A1.5 1.5 0 0 0 4 14h8a1.5 1.5 0 0 0 1.5-1.5V6.621a1.5 1.5 0 0 0-.44-1.06L9.94 2.439A1.5 1.5 0 0 0 8.878 2H4Zm1 5.75A.75.75 0 0 1 5.75 7h4.5a.75.75 0 0 1 0 1.5h-4.5A.75.75 0 0 1 5 7.75Zm0 3a.75.75 0 0 1 .75-.75h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1-.75-.75Z"
						clip-rule="evenodd"></path>
				</svg>
				MIT License
			</a>
			<WhyAndHow client:load />
			<a
				class="inline-flex flex-row items-center gap-1"
				href="//github.com/anasrar/sheera"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					viewBox="0 0 16 16"
					fill="currentColor"
					class="w-4 h-4"
				>
					<path
						d="M2 3.5A1.5 1.5 0 0 1 3.5 2h2.879a1.5 1.5 0 0 1 1.06.44l1.122 1.12A1.5 1.5 0 0 0 9.62 4H12.5A1.5 1.5 0 0 1 14 5.5v1.401a2.986 2.986 0 0 0-1.5-.401h-9c-.546 0-1.059.146-1.5.401V3.5ZM2 9.5v3A1.5 1.5 0 0 0 3.5 14h9a1.5 1.5 0 0 0 1.5-1.5v-3A1.5 1.5 0 0 0 12.5 8h-9A1.5 1.5 0 0 0 2 9.5Z"
					></path>
				</svg>
				Repository
			</a>
		</div>
	</header>
	<main class="mt-10 mb-4">
		<div class="grid grid-cols-[repeat(2,_auto)] gap-x-3 gap-y-2">
			{
				hooks.map(({ slug, data }) => (
					<ListHook framework={framework} {slug} {data} client:load />
				))
			}
		</div>
	</main>
</Layout>
